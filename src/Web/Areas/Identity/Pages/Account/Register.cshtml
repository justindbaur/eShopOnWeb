@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="container">

    <h2>@ViewData["Title"]</h2>

    <div class="row">
        <div class="col-md-8">
            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>Create a new account.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-default">Register</button>
                <button id="register-passwordless" type="button" class="btn btn-default">Register Passkey</button>
            </form>
        </div>
    </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.passwordless.dev/dist/1.1.0/umd/passwordless.umd.min.js" crossorigin="anonymous"></script>
    <script>
        const passwordlessClient = new Passwordless.Client({
            apiKey: "eshoptest:public:18233d9a370f4ddaadf125b043b16869"
        });
        const register = async () => {
            const email = document.getElementById("Input_Email").value;
            const registerTokenResponse = await fetch("/passwordless-register", {
                method: "POST",
                body: JSON.stringify({ username: email, email: email }),
                headers: {
                    "Content-Type": "application/json",
                }
            })
                .then(r => r.json());

            const { token, error } = await passwordlessClient.register(registerTokenResponse.token);
            if (error) {
                console.warn(error);
                return;
            }

            console.log(token);
        }
        document.getElementById("register-passwordless").onclick = register;
    </script>
}
